import mongoose from 'mongoose';

const PostSchema = new mongoose.Schema({
  // Headline of the news article/content
  headline: {
    type: String,
    required: [true, 'Please provide a headline for this post.'],
    maxlength: [200, 'Headline cannot be more than 200 characters.'],
  },
  // Full content/description of the news article
  description: {
    type: String,
    required: [true, 'Please provide content for this post.'],
    maxlength: [5000, 'Content cannot be more than 5000 characters.'],
  },
  // The credibility score generated by the ML model (your combined score)
  mlScore: {
    type: Number,
    min: 0,
    max: 1, // Scores are between 0 and 1
    default: 0.5, // Default if scoring fails or not yet processed
  },
  // User ID (email in your case) of the user who uploaded the post
  uploadedBy: {
    type: String, // Storing user email as ID for now
    required: [true, 'Post must have an uploader.'],
  },
  // Array of user IDs (emails) who upvoted this post
  upvotes: [{
    type: String,
    default: [],
  }],
  // Array of user IDs (emails) who downvoted this post
  downvotes: [{
    type: String,
    default: [],
  }],
  // Timestamp for when the post was created
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

// If the model already exists, use it; otherwise, create a new one.
// This prevents Mongoose from recompiling the model on hot reloads in Next.js.
export default mongoose.models.Post || mongoose.model('Post', PostSchema);